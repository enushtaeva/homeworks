@using ClassLibrary1
@model List<Statistic>
@{
    ViewBag.Title = "Статистика";
}
<br />
<br />
<h1 class="starter-template" style="text-align:center">Статистика из файла JSON</h1>
<br />
<br />
<table class="table" id="mt">
    <tr>
        <th>Логин</th>
        <th>Количество побед</th>
        <th>Количество ничьих</th>
        <th>Количество поражений</th>
    </tr>
    @foreach (Statistic user in Model)
    {
        <tr>
            <td>@user.Login</td>
            <td>@user.Win</td>
            <td>@user.NF</td>
            <td>@user.Won</td>
        </tr>
    }
</table>
<br />
<br />
<p style="text-align:center">@Html.ActionLink("Статистика из базы данных","StatsOnTask")</p>
<p style="text-align:center"><button id="mybtn" class="mybt">Изменить название сервера localdb</button></p>
    <div id="myModalBox" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content" style="margin-top:50%">
                <!-- Заголовок модального окна -->
                <div class="modal-header" style="text-align:center" id="myheader">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title"></h4>
                </div>
                <!-- Основное содержимое модального окна -->
                <div class="modal-body" style="text-align:center" id="mybody">
                    Введите название сервера localdb: <br />
                    <label>(LocalDb)\</label><input type="text" id="servname" />
                </div>
                <!-- Футер модального окна -->
                <div class="modal-footer" style="text-align:center">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="width: 100px;background: #6600cc;color: #ffffff;" id="myb">Ок</button>
                </div>
            </div>
        </div>
    </div>
    @section scripts {

        <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <script type="text/javascript">
            var chat = $.connection.statisticHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.updateStatistic = function (data) {
                $("#mt tbody").find("tr:gt(0)").remove();
                var data1 = JSON.parse(data);
                for (var t = 0; t < data1.length; t++) {
                    var tr = document.createElement("tr");
                    var td = document.createElement("td");
                    td.innerHTML = data1[t].login;
                    tr.appendChild(td);
                    td = document.createElement("td");
                    td.innerHTML = data1[t].win;
                    tr.appendChild(td);
                    td = document.createElement("td");
                    td.innerHTML = data1[t].nf;
                    tr.appendChild(td);
                    td = document.createElement("td");
                    td.innerHTML = data1[t].won;
                    tr.appendChild(td);
                    $("#mt tbody").append(tr);
                }

            }
            $.connection.hub.start().done(function () {
                var servername = getCookie("servername");
                $("#mybtn").click(function () {
                    servername = getCookie("servername");
                    $("#servname").val(servername);
                    $("#myModalBox").modal('show');
                    $('#myModalBox').on('hidden.bs.modal', function () {
                        $.ajax({
                            type: "POST",
                            url: "/Home/SetNameOfServer",
                            content: "application/json; charset=utf-8",
                            dataType: "json",
                            data: { 'nameofserver': $("#servname").val() },
                            success: function (data) {
                                console.log("yes");
                                var options = { path: '/' };
                                setCookie("servername", $("#servname").val(), options);
                            }

                        });
                    });
                })
               
                if (servername == null) {
                    $("#myModalBox").modal('show');
                    $('#myModalBox').on('hidden.bs.modal', function () {
                        $.ajax({
                            type: "POST",
                            url: "/Home/SetNameOfServer",
                            content: "application/json; charset=utf-8",
                            dataType: "json",
                            data: { 'nameofserver': $("#servname").val() },
                            success: function (data) {
                                console.log("yes");
                                var options = { path: '/' };
                                setCookie("servername", $("#servname").val(), options);
                            }

                        });
                    });
                }
            });
            function getCookie(name) {
                var matches = document.cookie.match(new RegExp(
                  "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
                ));
                return matches ? decodeURIComponent(matches[1]) : undefined;
            }
            function setCookie(name, value, options) {
                options = options || {};

                var expires = options.expires;

                if (typeof expires == "number" && expires) {
                    var d = new Date();
                    d.setTime(d.getTime() + expires * 1000);
                    expires = options.expires = d;
                }
                if (expires && expires.toUTCString) {
                    options.expires = expires.toUTCString();
                }

                value = encodeURIComponent(value);

                var updatedCookie = name + "=" + value;

                for (var propName in options) {
                    updatedCookie += "; " + propName;
                    var propValue = options[propName];
                    if (propValue !== true) {
                        updatedCookie += "=" + propValue;
                    }
                }

                document.cookie = updatedCookie;
            }
        </script>

    }


